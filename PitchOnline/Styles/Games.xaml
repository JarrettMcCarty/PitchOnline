<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:apexMVVM="clr-namespace:Apex.MVVM;assembly=Apex"
                    xmlns:apexCommands="clr-namespace:Apex.Commands;assembly=Apex"
                    xmlns:apexDragAndDrop="clr-namespace:Apex.DragAndDrop;assembly=Apex"
                    xmlns:apexConverters="clr-namespace:Apex.Converters;assembly=Apex"
                    xmlns:games="clr-namespace:PitchOnline"
                    xmlns:core="clr-namespace:PitchOnline.Core;assembly=PitchOnline.Core">


    <games:CardBrushConverter x:Key="CardBrushConverter"/>


    <DataTemplate DataType="{x:Type core:PlayingCard}">
        <Border Width="140" Height="190" Cursor="Hand" BorderThickness="1" CornerRadius="6" 
            apexDragAndDrop:DragAndDrop.IsDraggable="True"
            apexCommands:ExtendedCommands.RightClickCommand="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=ViewModel.RightClickCardCommand}"
            apexCommands:ExtendedCommands.RightClickCommandParameter="{Binding }">
            <apexCommands:EventBindings.EventBindings>
                <apexCommands:EventBindingCollection>
                    <apexCommands:EventBinding EventName="MouseLeftButtonUp" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=ViewModel.LeftClickCardCommand}" 
                                                CommandParameter="{Binding}" />
                </apexCommands:EventBindingCollection>
            </apexCommands:EventBindings.EventBindings>
            <Border.Background>
                <MultiBinding Converter="{StaticResource CardBrushConverter}">
                    <Binding Path="CardType" />
                    <Binding Path="IsFaceDown" />
                </MultiBinding>
            </Border.Background>
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsFaceDown}" Value="True">
                            <Setter Property="BorderBrush" Value="#00ffffff" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsFaceDown}" Value="False">
                            <Setter Property="BorderBrush" Value="#ff666666" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
    </DataTemplate>


    <Style TargetType="{x:Type games:CardStackControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type games:CardStackControl}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsControl ItemsSource="{TemplateBinding ItemsSource}" apexDragAndDrop:DragAndDrop.IsDragSource="True" apexDragAndDrop:DragAndDrop.IsDropTarget="True" Background="Transparent">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <games:CardStackPanel FacedownOffset="{Binding FaceDownOffset, RelativeSource={RelativeSource AncestorType={x:Type games:CardStackControl}}}"
                                                      FaceupOffset="{Binding FaceUpOffset, RelativeSource={RelativeSource AncestorType={x:Type games:CardStackControl}}}"
                                                      OffsetMode="{Binding OffsetMode, RelativeSource={RelativeSource AncestorType={x:Type games:CardStackControl}}}"
                                                      NValue="{Binding NValue, RelativeSource={RelativeSource AncestorType={x:Type games:CardStackControl}}}"
                                                      Orientation="{Binding Orientation, RelativeSource={RelativeSource AncestorType={x:Type games:CardStackControl}}}" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <!--The style for text etc in a game. -->
    <Style x:Key="HomeTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#99FFFFFF" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <!-- The style for a stack marker. -->
    <Style x:Key="StackMarker" TargetType="Border">
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderThickness" Value="6" />
        <Setter Property="CornerRadius" Value="15" />
        <Setter Property="BorderBrush" Value="#33FFFFFF" />
        <Setter Property="Margin" Value="8,10,40,60" />
    </Style>
    <!-- Style for a run marker. -->
    <Style x:Key="RunMarker" TargetType="Border">
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderThickness" Value="6" />
        <Setter Property="CornerRadius" Value="15" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#33FFFFFF" Offset="0" />
                    <GradientStop Color="#00FFFFFF" Offset="0.8" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="8,10,40,40" />
    </Style>
    <!-- A nice clean style for a button. -->
    <Style x:Key="HomeButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="8" BorderThickness="4" CornerRadius="30" BorderBrush="#66FFFFFF" Background="#11FFFFFF" Cursor="Hand">
                        <ContentPresenter TextBlock.Foreground="#99FFFFFF" TextBlock.FontSize="20" TextBlock.FontWeight="SemiBold" HorizontalAlignment="Center" Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BetaButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="8" BorderThickness="4" CornerRadius="30" BorderBrush="#66FFFFFF" Background="#11FFFFFF" Cursor="Hand" ToolTip="Currently In Beta ... Try it out now!!">
                        <ContentPresenter Opacity=".9" TextBlock.Foreground="#99FFFFFF" TextBlock.FontSize="20" TextBlock.FontWeight="SemiBold" HorizontalAlignment="Center" Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComingSoonButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="8" BorderThickness="4" CornerRadius="30" BorderBrush="#66FFFFFF" Background="#11FFFFFF" Cursor="Hand" ToolTip="Coming Soon ...">
                        <ContentPresenter Opacity=".5" TextBlock.Foreground="#99FFFFFF" TextBlock.FontSize="20" TextBlock.FontWeight="SemiBold" HorizontalAlignment="Center" Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="DrawModeValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="core:DrawMode" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    
    <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="DifficultyValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="core:Difficulty" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    -->
</ResourceDictionary>